name: VM Python package

on:
  - push
  - pull_request

jobs:
  bsd:
    runs-on: ubuntu-22.04

    strategy:
      fail-fast: false
      matrix:
        platform: [freebsd-vm, netbsd-vm, openbsd-vm]
        system-hidapi: ["", "--with-system-hidapi"]

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Run in VM
      uses: vmactions/${{ matrix.platform }}@v1
      env:
        HIDAPI_SYSTEM_HIDAPI: ${{ matrix.system-hidapi == '--with-system-hidapi' && '1' || '0' }}
      with:
        envs: 'HIDAPI_SYSTEM_HIDAPI HIDAPI_WITH_LIBUSB'
        usesh: true
        copyback: false
        prepare: |
          set -e

          cd work || true
          cd cython-hidapi || true
          cd cython-hidapi || true
          pwd && ls -l1

          ${{ matrix.platform == 'freebsd-vm' && true || false }} && pkg install -y libiconv pkgconf py-pip ${{ matrix.system-hidapi == '--with-system-hidapi' && 'hidapi' || '' }}
          ${{ matrix.platform == 'netbsd-vm' && true || false }} && /usr/sbin/pkg_add pkgconf libusb1 libiconv py-pip ${{ matrix.system-hidapi == '--with-system-hidapi' && 'libhidapi' || '' }}
          ${{ matrix.platform == 'openbsd-vm' && true || false }} && pkg_add pkgconf libusb1-- libiconv py-pip cmake ninja
          ${{ ((matrix.platform == 'openbsd-vm') && (matrix.system-hidapi == '--with-system-hidapi')) && ./build_install_hidapi.sh || true }}

          python3 -m pip install --upgrade pip
          python3 -m pip install setuptools tox tox-gh-actions

          pip3 install -r requirements.txt --upgrade

        run: |
          set -e
          cd work || true
          cd cython-hidapi || true
          cd cython-hidapi || true
          pwd && ls -l1
          pip3 install .
          tox
